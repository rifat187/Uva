#include<bits/stdc++.h>
using namespace std;
#define		pb              push_back
#define		PB              pop_back
#define		nn              "\n"
#define		all(p)          p.begin(),p.end()
#define		zz(v)           v.size()
#define		ss              ' '
#define 	S(a)            scanf("%lld",&a)
#define 	SS(a,b)         scanf("%lld %lld",&a,&b)
#define 	SSS(a,b,c)      scanf("%lld %lld %lld",&a,&b,&c)
#define		gcd(a,b)        __gcd(a,b)
#define		lcm(a,b)        (a*b)/gcd(a,b)
#define		pi              acos(-1.0)
typedef		long long       ll;
typedef		vector<ll>      vll;

const ll MAX=11111;
ll b;

vll v[MAX];
ll visited[MAX];
ll level[MAX];

int  bfs(ll u)
{
    int cnt=0;
    memset(visited,0,sizeof(visited));
    memset(level,0,sizeof(level));

    visited[u]=1;
    level[u]=0;
    queue<ll>q;
    q.push(u);

    while(!q.empty())
    {
        u=q.front();
        visited[u]=1;
        q.pop();

        for(ll i=0; i<zz(v[u]); i++)
        {
            ll p=v[u][i];
            if(!visited[p])
            {
                q.push(p);
                visited[p]=1;
                level[p]=level[u]+1;
                if(level[p]<=b)
                    cnt++;

            }
        }
    }

    return cnt;

}

int main()
{
    //freopen("in.txt","r",stdin);
    ll a,c,i,j,t,k,node,edge,in=1;
    while(cin>>node)
    {
        if(node==0)
            return 0;

        for(ll i=0; i<MAX; i++)
            v[i].clear();

        ll mx=0;
        for(i=1; i<=node; i++)
        {
            cin>>a>>b;

            v[a].pb(b);
            v[b].pb(a);
            mx=max(mx,max(a,b));
        }
        ll ac=0;
        for(ll i=0; i<=mx; i++)
        {
            if(zz(v[i])>0)
                ac++;
        }

        while(cin>>a>>b)
        {
            if(!a&&!b)
                break;

            ll cnt;
            cnt = bfs(a);
          ll ans = ac-cnt -1;


            //cout<<cnt<<nn;
            //  if(in>1) cout<<nn;

            printf("Case %lld: %lld nodes not reachable from node %lld with TTL = %lld.\n",in++,ans,a,b);



        }


    }
    return 0;
}
