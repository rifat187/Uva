#include<bits/stdc++.h>
using namespace std;
typedef      long long int    ll;
typedef      long double   ld;
typedef     vector<ll>      vll;
#define     fi              first
#define     print(v)        for(ll i:v) cout<<i<<ss
#define     se              second
#define     pb              push_back
#define     nn              "\n"
#define     all(p)          p.begin(),p.end()
#define     zz(v)           (ll)v.size()
#define     S(a)            scanf("%lld",&a)
#define     SS(a,b)         scanf("%lld %lld",&a,&b)
#define     SSS(a,b,c)      scanf("%lld %lld %lld",&a,&b,&c)
#define     ss              ' '
#define     pii             pair<ll,ll>
#define     gcd(a,b)        __gcd(a,b)
#define     lcm(a,b)        (a*b)/gcd(a,b)
const double eps = 1e-8;



long long MOD;

struct A
{
    long long arr[5][5];
};


A MatrixMulti(A a, A b)
{
    A result;
    int i,j,k;
    for(i=0; i<2; i++)
        for(j=0; j<2; j++)
        {
            result.arr[i][j]=0;
            for(k=0; k<2; k++)
                result.arr[i][j]+=(a.arr[i][k]*b.arr[k][j]);
            result.arr[i][j]=result.arr[i][j]%MOD;
        }

    return result;
}

A BigMod(A a, long long n)
{
    A ret;
    int i,j;
    for(i=0; i<2; i++)
        for(j=0; j<2; j++)
        {
            if(i==j)
                ret.arr[i][j]=1;
            else
                ret.arr[i][j]=0;
        }

    while(n)
    {
        if(n & 1)
        {
            ret=MatrixMulti(ret,a);
        }
        a=MatrixMulti(a,a);
        n>>=1;
    }
    return ret;
}

int main()
{
    A initialMatrix,ans;
    long long n,m,i,j;

    for(i=0; i<2; i++)
        for(j=0; j<2; j++)
            initialMatrix.arr[i][j]=1;

    initialMatrix.arr[0][0]=0;
    while(cin>>n)
    {
        cin>>m;
        MOD=pow(2,m);

        if(n==0)
        {
            cout<<"0"<<endl;
            continue;
        }
        if(n==1)
        {
            if(m==0)
                cout<<"0"<<endl;
            else
                cout<<"1"<<endl;
            continue;
        }

        ans=BigMod(initialMatrix,n-1);

        cout<<ans.arr[1][1]%MOD<<endl;
    }
    return 0;
}

/* Final check before submit :

1. array size or integer overflow,like uninitialised 0 index.

2. Think twice,code once.check all possible counter test case.

3. Be careful about corner case! n=1?k=1? something about 0?

4. avoid stupid mistake!complexity(t/m)?precision error?submit same code twice?

5. if got WA than remember that you are missing something common.
   *** Be confident!!! who knows? may be your one step back to AC ***
4. minus mod ans=(ans-k+mod)%mod;

*/


